@page "/ChangeLogs/Edit/{ChangeLogId:guid}"
@inject IPageRepository pageRepository
@inject NavigationManager _navManager
@inject ToastService toastService
@inject IStringLocalizer<Resource> localizer

@attribute [Authorize(Roles = "Admin")]

<SiteChangeForm ChangeLog="existChangeLog" OnValidSubmit="Update" Title="@localizer["EditChangeLog"]"></SiteChangeForm>

@code {
    [Parameter] public Guid ChangeLogId { get; set; }
    private ChangeLogDTO existChangeLog;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            existChangeLog = await pageRepository.GetChangeLog(ChangeLogId);
            await this.InvokeAsync(() => StateHasChanged());
        }
    }

    public async Task Update()
    {
        if (await pageRepository.UpdateChangeLog(existChangeLog))
        {
            _navManager.NavigateTo("ChangeLogs/All");
            toastService.ShowToast(localizer["ChangeLogUpdated"], Enums.ToastLevel.Success);
        }
    }
}
