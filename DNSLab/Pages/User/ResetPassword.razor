@page "/user/ResetPassword/{Token}"

@inject IStringLocalizer<Resource> localizer
@inject IAccountRepository accountReository

<div class="mt-5">
    @if (isPasswordChanged)
    {
        <BitMessageBar MessageBarType="BitMessageBarType.Success">
            <BitLabel>رمز عبور شما با موفقیت تغییر کرد.</BitLabel>
        </BitMessageBar>
        <BaseNavigateButtonComponent Href="user/auth" Text="بازگشت به صفحه ورود" Icon="BitIconName.Signin"></BaseNavigateButtonComponent>
    }
    else
    {
        <EditForm class="container-sm mt-4 col-lg-4" Model=resetPassword Context=ResetPasswordContext>
            <div class="card mb-4">
                <div class="card-header"><BitLabel>تغییر رمز عبور</BitLabel></div>
                <div class="card-body">
                    <BitTextField Label="رمز عبور جدید را وارد نمایید" Type="BitTextFieldType.Password" Class="dir-ltr" Placeholder="رمز عبور" @bind-Value="@resetPassword.Password" IsRequired />
                    <BaseButtonComponent Caption=@localizer["SaveChanges"]
                                     IsBussyCaption=@localizer["Loading"]
                                     CssClass="col-12"
                                     Color=ColorEnum.Primary
                                     Icon=BitIconName.Save
                                     EditContext=ResetPasswordContext
                                     OnClick=ResetUserPassword></BaseButtonComponent>
                </div>
            </div>
        </EditForm>
    }
</div>

@code {
    [Parameter] public string Token { get; set; }
    private ResetPasswordDTO resetPassword = new ResetPasswordDTO();

    private bool isPasswordChanged = false;

    private async Task ResetUserPassword()
    {
        resetPassword.Token = Token;
        isPasswordChanged = await accountReository.ResetPassword(resetPassword);
    }
}
