@page "/user/ResetPassword/{Token}"
@using DNSLab.DTOs.User
@using DNSLab.Interfaces.Repository
@inject IStringLocalizer<Resource> localizer
@inject IAccountRepository accountReository

<div class="container-xl mt-5">
    <div class="row">
        @if (isPasswordChanged)
        {
            <div class="alert alert-success" role="alert">
                <p>رمز عبور شما با موفقیت تغییر کرد.</p>
            </div>
            <a class="btn btn-primary col-3" href="user/auth">بازگشت به صفحه ورود</a>
        }
        else
        {
            <EditForm class="container-sm mt-4 col-lg-4" Model=resetPassword OnValidSubmit="ResetUserPassword">
                <DataAnnotationsValidator />
                <div class="card mb-4">
                    <div class="card-header">تغییر رمز عبور</div>
                    <div class="card-body">
                        <div class="mb-3">
                            <label class="small mb-1">رمز عبور جدید را وارد نمایید</label>
                            <InputPassword class="form-control" placeholder="رمز عبور" @bind-Value="@resetPassword.Password" required />
                        </div>
                        <button type="submit" class="btn btn-primary col-12" disabled="@isSubmited">
                            @if (isSubmited)
                            {
                                <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                                <text>@localizer["Loading"]...</text>
                            }
                            else
                            {
                                <text>@localizer["SaveChanges"]</text>
                            }
                        </button>
                    </div>
                </div>
            </EditForm>
        }
    </div>
</div>

@code {
    [Parameter] public string Token { get; set; }
    private ResetPasswordDTO resetPassword = new ResetPasswordDTO();
    private bool isSubmited = false;

    private bool isPasswordChanged = false;

    private async Task ResetUserPassword()
    {
        isSubmited = true;

        resetPassword.Token = Token;
        isPasswordChanged = await accountReository.ResetPassword(resetPassword);

        isSubmited = false;
    }
}
