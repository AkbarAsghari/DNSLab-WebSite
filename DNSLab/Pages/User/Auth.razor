@page "/user/auth"

@inject IAccountRepository accountReository
@inject NavigationManager navigationManager
@inject IAuthService authService
@inject IStringLocalizer<Resource> localizer
@inject ToastService _toastService;

<div class="container-xl mt-5">
    <EditForm class="container-sm mt-4 col-lg-4" Model=user Context="AuthContext">
        <div class="card mb-4">
            <div class="card-header"><BitLabel>@localizer["Login"]</BitLabel></div>
            <div class="card-body">
                <BitTextField Label="@localizer["UsernameOrEmail"]" Class="dir-ltr" Placeholder="@localizer["UsernameOrEmail"]" @bind-Value="@user.UsernameOrEmail" IsRequired />
                <BitTextField Label="@localizer["Password"]" Type="BitTextFieldType.Password" Class="dir-ltr" @bind-Value="@user.Password" IsRequired />
            </div>
            <BaseButtonComponent Caption=@localizer["Login"]
                                 IsBussyCaption=@localizer["Loading"]
                                 CssClass="col-12"
                                 Color=ColorEnum.Primary
                                 Icon=BitIconName.Signin
                                 EditContext=AuthContext
                                 OnClick=AuthUser></BaseButtonComponent>
            <BitLink Class="text-center mt-2" Href="user/ForgetPassword">رمز خودتو فراموش کردی؟</BitLink>
        </div>
    </EditForm>
</div>

@code {
    [Parameter] public string? RedirectTo { get; set; }

    private AuthenticateDTO user = new AuthenticateDTO();

    protected override void OnParametersSet()
    {
        if (RedirectTo != null)
            _toastService.ShowToast(localizer["PleaseLoginFirst"], Enums.ToastLevel.Info);
    }

    private async Task AuthUser()
    {
        var userToken = await accountReository.Login(user);
        if (!String.IsNullOrEmpty(userToken))
        {
            await authService.Login(userToken);
            navigationManager.NavigateTo(RedirectTo == null ? "dashboard" : RedirectTo);
        }
    }
}
