@page "/tools/port"

@attribute [Authorize]

@inject IIPRepository iPRepository
@inject IStringLocalizer<Resource> localizer

<ToolsForm Header="@localizer["PortChecker"]" Model="@hostOrIPAddressAndPort" OnValidSubmit="OnValidSubmit" IsProgressing="@isProgressing" Result="@result">
    <Body>
        <div class="col-md-6">
            <BitTextField Label="@localizer["HostOrIPAddress"]" Class="dir-ltr" Placeholder="@IPDTO.IPv4" @bind-Value="@hostOrIPAddressAndPort.HostOrIPAddress" />
        </div>
        <div class="col-md-2">
            <BitTextField Label="@localizer["PortNumber"]" Class="dir-ltr" Placeholder="80" @bind-Value="@hostOrIPAddressAndPort.Port" />
        </div>
    </Body>
</ToolsForm>

@code {
    private HostOrIPAddressAndPortDTO hostOrIPAddressAndPort = new HostOrIPAddressAndPortDTO();
    private bool isProgressing = false;
    private string result = String.Empty;

    [CascadingParameter] public IPDTO IPDTO { get; set; }

    public async Task OnValidSubmit()
    {
        isProgressing = true;

        var response = await iPRepository.IsIPAndPortOpen(hostOrIPAddressAndPort.HostOrIPAddress, hostOrIPAddressAndPort.Port);
        if (response != null)
        {
            if (response == true)
                result = localizer["PortIsOK"];
            else
                result = localizer["PortIsNotOK"];
        }
        else
        {
            result = String.Empty;
        }

        isProgressing = false;
    }

    protected override void OnAfterRender(bool firstRender)
    {
        if (String.IsNullOrEmpty(hostOrIPAddressAndPort.HostOrIPAddress))
            hostOrIPAddressAndPort.HostOrIPAddress = IPDTO.IPv4;

        if (String.IsNullOrEmpty(hostOrIPAddressAndPort.Port))
            hostOrIPAddressAndPort.Port = "80";
    }
}
