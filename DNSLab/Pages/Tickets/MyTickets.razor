@page "/Ticket/MyTickets"

@using DNSLab.DTOs.Ticket
@inject IStringLocalizer<Resource> localizer
@inject ITicketRepository ticketRepository
@inject NavigationManager navigationManager
@attribute [Authorize]

@if (tickets == null)
{
    <Loading />
}
else
{
    <Modal @ref="Modal">
        <Title>
            <BitLabel>@modalTitle</BitLabel>
        </Title>
        <Body>
            <BitLabel>@localizer["TicketTitle"] :@((closeRcord.ID != Guid.Empty) ? @closeRcord.Title : @deleteRcord.Title )</BitLabel>
        </Body>
        <Footer>
            <BaseButtonComponent Caption=@localizer["Cancel"]
                             IsBussyCaption=@localizer["Progressing"]
                             Color=Color.Warning
                             Icon=@Icons.Material.Filled.Cancel
                             OnClick=Modal.Close></BaseButtonComponent>
            <BaseButtonComponent Caption=@((closeRcord.ID != Guid.Empty) ? localizer["Close"] : localizer["Delete"] )
                             IsBussyCaption=@localizer["Progressing"]
                             Color=Color.Error
                             Icon=@Icons.Material.Filled.Delete
                             OnClick=ModalAccept></BaseButtonComponent>
        </Footer>
    </Modal>

    <h4>@localizer["MyTickets"]</h4>
    <div class="mb-3">
        <BaseNavigateButtonComponent Href="Ticket/New"
                                 Text="@(localizer["CreateNewTicket"])">
        </BaseNavigateButtonComponent>
    </div>
    <div class="mb-3">
        @if (tickets.Count() == 0)
        {
            <BitMessageBar MessageBarType="BitMessageBarType.Info">
                <BitLabel>@localizer["ThereIsNoTicket"]</BitLabel>
            </BitMessageBar>
        }
        else
        {
            @foreach (var item in tickets)
            {
                <hr class="m-1" />
                <div class="row">
                    <div class="row col-lg-8 col-7">
                        <div class="col-lg-5 col-sm-12 align-self-center">
                            <BitLabel>@localizer["TicketTitle"] : @(item.Title.MakeCut(23))</BitLabel>
                        </div>
                        <div class="col-lg-5 col-sm-12 align-self-center">
                            <div class="row">
                                <BitLabel>@localizer["CreateDate"] : @item.CreateDate.ToLocalizerString()</BitLabel>
                                @if (@item.UpdateDate != null)
                                {
                                    <BitLabel>@localizer["UpdateDate"] : @item.UpdateDate.Value.ToLocalizerString()</BitLabel>
                                }
                            </div>
                        </div>
                        <div class="col-lg-2 col-sm-12 align-self-center">
                            @switch (@item.IsClosed)
                            {
                                case true:
                                    <BitLabel>@localizer["Closed"]</BitLabel>
                                    break;
                                case false:
                                    <BitLabel>@localizer["Open"]</BitLabel>
                                    break;
                            }
                        </div>

                    </div>
                    <div class="col">
                        @if (!item.IsClosed)
                        {
                            <BaseButtonComponent Caption=@localizer["Close"]
                                 IsBussyCaption=@localizer["Progressing"]
                                 Color=Color.Warning
                                 Icon=@Icons.Material.Filled.MarkEmailRead
                                 OnClick=@(()=>CloseTicket(item))></BaseButtonComponent>
                        }
                        <BaseButtonComponent Caption=@localizer["Open"]
                                 IsBussyCaption=@localizer["Progressing"]
                                 Color=Color.Primary
                                 Icon=@Icons.Material.Filled.MarkAsUnread
                                 OnClick=@(()=>OpenTicket(item))></BaseButtonComponent>
                        <BaseButtonComponent Caption=@localizer["Delete"]
                                 IsBussyCaption=@localizer["Progressing"]
                                 Color=Color.Error
                                 Icon=@Icons.Material.Filled.Delete
                                 OnClick=@(()=>DeleteTicket(item))></BaseButtonComponent>
                    </div>
                </div>

            }
        }
    </div>
}