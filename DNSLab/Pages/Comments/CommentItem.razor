@inject ICommentRepository commentRepository
@inject IStringLocalizer<Resource> localizer

<hr class="m-1" />
<div class="w-100">
    <div class="row">
        <div class="col-auto comment-profile">
            <UserProfileImage Size=70 UserId="@FullComment.UserId.ToString()" />
            <BitLabel Class="text-nowrap"><small class="text-muted">@FullComment.CreateDate.CalcRelativeTime()</small></BitLabel>
        </div>
        <div class="col">
            <div class="row g-0">
                <h6>@FullComment.FullName</h6>
                <BitLabel Class="comment-text m-0">@FullComment.Text</BitLabel>
            </div>
        </div>
        @if (@FullComment.RepliesCount > 0)
        {
            <div class="pe-5">
                <BaseButtonComponent Caption=@("پاسخ ها (" + @FullComment.RepliesCount + ")")
                                 IsBussyCaption=@localizer["Progressing"]
                                 Color=ColorEnum.Primary
                                 IsOutLine=true
                                 Icon=@(isCollapsed == false ? BitIconName.ChevronDown : BitIconName.ChevronUp)
                                 OnClick=@(()=>ShowReplies())></BaseButtonComponent>
                @if (isCollapsed && Replies != null)
                {
                    @foreach (var comment in Replies)
                    {
                        <CommentItem FullComment="comment" />
                    }
                }
            </div>
        }
    </div>
</div>
@code {
    [Parameter] public FullCommentDTO FullComment { get; set; }
    private IEnumerable<FullCommentDTO> Replies { get; set; }
    private bool isCollapsed = false;

    private async Task ShowReplies()
    {
        if (Replies == null)
            Replies = await commentRepository.GetCommentReplies(FullComment.Id);

        isCollapsed = !isCollapsed;
    }
}