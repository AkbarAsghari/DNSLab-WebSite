@page "/dns/createtoken"

@inject IDNSRepository dnsRepository
@inject NavigationManager _navManager
@inject ToastService toastService
@inject IStringLocalizer<Resource> localizer


<TokenForm Title="@localizer["CreateToken"]" OnValidSubmit="Create" TokenAndDNS="tokenAndDNS" HostSummariesAndChecked="HostSummariesAndChecked" IsInProgress="isProgressing" />

@code {
    private TokenAndDNSDTO tokenAndDNS = new TokenAndDNSDTO()
        {
            HostNameIds = new List<Guid>()
        };

    private List<HostSummaryAndCheckedDTO> HostSummariesAndChecked = new  List<HostSummaryAndCheckedDTO>();

    private bool isProgressing = false;

    protected override async Task OnInitializedAsync()
    {
        var HostSummaries = await dnsRepository.GetHostSummaries();

        foreach (var item in HostSummaries)
            HostSummariesAndChecked.Add(new HostSummaryAndCheckedDTO
                {
                    Id = item.Id,
                    Address = item.Address,
                    IsChecked = tokenAndDNS.HostNameIds.Contains(item.Id)
                });
    }

    public async Task Create()
    {
        isProgressing = true;

        if (await dnsRepository.GenerateTokenForAccessToUpdateHostNameSystem(tokenAndDNS))
        {
            _navManager.NavigateTo("dns/mytokens");
            toastService.ShowToast(localizer["TokenCreated"], Enums.ToastLevel.Success);
        }

        isProgressing = false;
    }
}
