@page "/dns/token/edit/{TokenId:guid}"

@inject IDNSRepository dnsRepository
@inject NavigationManager _navManager
@inject ToastService toastService
@inject IStringLocalizer<Resource> localizer


<TokenForm Title="@localizer["EditToken"]" OnValidSubmit="Update" TokenAndDNS="tokenAndDNS" HostSummariesAndChecked="HostSummariesAndChecked"/>

@code {
    [Parameter] public Guid TokenId { get; set; }

    private TokenAndDNSDTO tokenAndDNS = new TokenAndDNSDTO() { HostNameIds = new List<Guid>() };
    private List<HostSummaryAndCheckedDTO> HostSummariesAndChecked = new List<HostSummaryAndCheckedDTO>();

    protected override async Task OnInitializedAsync()
    {
        var HostSummaries = await dnsRepository.GetHostSummaries();
        tokenAndDNS = await dnsRepository.GetToken(TokenId);

        foreach (var item in HostSummaries)
            HostSummariesAndChecked.Add(new HostSummaryAndCheckedDTO
                {
                    Id = item.Id,
                    Address = item.Address,
                    IsChecked = tokenAndDNS.HostNameIds.Contains(item.Id)
                });
    }

    public async Task Update()
    {
        if (await dnsRepository.UpdateTokensDomainNameSystems(tokenAndDNS))
        {
            _navManager.NavigateTo("dns/mytokens");
            toastService.ShowToast(localizer["TokenUpdated"], Enums.ToastLevel.Success);
        }
    }
}
