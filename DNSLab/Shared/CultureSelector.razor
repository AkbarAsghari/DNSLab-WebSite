@using System.Globalization
@using Blazored.LocalStorage
@inject ILocalStorageService localStorage
@inject NavigationManager Nav

<select @bind="CultureChange" class="form-select flag-icon-@(CultureChange.TwoLetterISOLanguageName) text-end">
    @foreach (var cul in Cultures)
    {
        <option value="@cul.Name">@($"{cul.Parent.NativeName} ({cul.Parent.Name})")</option>
    }
</select>

@code
{
    private List<CultureInfo> Cultures = new List<CultureInfo>()
    {
        new CultureInfo("en-EN"),
        new CultureInfo("fa-FA")
    };

    private CultureInfo _Culture = CultureInfo.CurrentCulture;

    private CultureInfo CultureChange
    {
        get => _Culture == null ? new CultureInfo("fa-FA") : _Culture.Name == "fa-FA" ? new CultureInfo("fa-FA") : new CultureInfo("en-EN");
        set => _Culture = value;
    }

    public void Save()
    {
        if ((CultureInfo.CurrentCulture.Name == CultureChange.Name) ||
            (CultureInfo.CurrentCulture.Name == CultureChange.Name))
            return;

        var uri = new Uri(Nav.Uri)
              .GetComponents(UriComponents.PathAndQuery, UriFormat.Unescaped);
        var cultureEscaped = Uri.EscapeDataString(_Culture.Name);
        var uriEscaped = Uri.EscapeDataString(uri);

        Nav.NavigateTo(
                   $"Culture/Set?culture={cultureEscaped}&redirectUri={uriEscaped}",
                   forceLoad: true);
    }
}