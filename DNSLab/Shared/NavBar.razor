@inject IStringLocalizer<Resource> localizer
@inject AuthenticationStateProvider auth

<nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-light border-bottom shadow-sm mb-3 fixed-top">
    @if (_IsAuthenticated == null)
    {
        <div class="col-lg-2 col-md-3 col-sm-4 col-6">
            <Loading IsInTop="false" />
        </div>
    }
    else if (_IsAuthenticated == true)
    {
        <a class="text-decoration-none auth-user-link" href="dashboard">
            <UserProfileImage Size=37 UserId=@_UserID />
            @_FullName (داشبورد)
        </a>
    }
    else
    {
        <div>
            <BaseNavigateButtonComponent Href="user/register" Text="@localizer["Register"]" Icon="BitIconName.InsertSignatureLine">
            </BaseNavigateButtonComponent>
            <BaseNavigateButtonComponent Href="user/auth" Text="@localizer["Login"]" Icon="BitIconName.Signin">
            </BaseNavigateButtonComponent>
        </div>
    }

    <button class="navbar-toggler" @onclick="ToggleNavMenu" type="button" data-toggle="collapse" data-target=".navbar-collapse" aria-controls="navbarSupportedContent"
            aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
    </button>
    <div class="@NavMenuCssClass navbar-collapse d-sm-inline-flex flex-sm-row-reverse" @onclick="CollapseNavMenu">
        <ul class="navbar-nav flex-grow-1">
            <li class="nav-item">
                <NavLink class="nav-link" href="/" Match="NavLinkMatch.All">
                    <span class="oi oi-home" aria-hidden="true"></span> @localizer["Home"]
                </NavLink>
            </li>
            <li class="nav-item">
                <NavLink class="nav-link" href="support">
                    <span class="oi oi-question-mark" aria-hidden="true"></span> راهنمای سایت
                </NavLink>
            </li>
            <li class="nav-item">
                <NavLink class="nav-link" href="articles">
                    <span class="oi oi-book" aria-hidden="true"></span> آموزش
                </NavLink>
            </li>
            <li class="nav-item">
                <NavLink class="nav-link" href="api">
                    <span class="oi oi-code" aria-hidden="true"></span> @localizer["API"]
                </NavLink>
            </li>
            <li class="nav-item">
                <NavLink class="nav-link" href="about">
                    <span class="oi oi-info" aria-hidden="true"></span> درباره ما
                </NavLink>
            </li>
        </ul>
    </div>
</nav>


@code {
    bool collapseNavMenu = true;
    bool? _IsAuthenticated = null;
    string _FullName = String.Empty;
    string _UserID = String.Empty;

    string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    void CollapseNavMenu()
    {
        collapseNavMenu = true;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var user = (await auth.GetAuthenticationStateAsync()).User;

            if (user.Identity != null)
            {
                _IsAuthenticated = user.Identity!.IsAuthenticated == true;
                if (_IsAuthenticated == true)
                {
                    if (user.Identities.FirstOrDefault()!.Claims.Any(x => x.Type.ToLower() == "nameid"))
                        _UserID = user.Identities.FirstOrDefault()!.Claims.FirstOrDefault(x => x.Type.ToLower() == "nameid")!.Value;

                    if (user.Identities.FirstOrDefault()!.Claims.Any(x => x.Type.ToLower() == "fullname"))
                        _FullName = user.Identities.FirstOrDefault()!.Claims.FirstOrDefault(x => x.Type.ToLower() == "fullname")!.Value;

                }
            }
            else
            {
                _IsAuthenticated = false;
            }
            await this.InvokeAsync(() => StateHasChanged());
        }
    }
}