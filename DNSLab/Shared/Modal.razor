<!-- Modal -->
<BitModal @bind-IsOpen=IsOpen IsBlocking=true>
    <div class="modal-header">
        <span>@Title</span>
        <BitIconButton OnClick=@(()=>IsOpen=false) IconName="BitIconName.ChromeClose" Title="Close" />
    </div>
    <div class="modal-body">
        @Body
        @if (@Footer is not null)
        {
            <hr />
            @Footer
        }
    </div>
</BitModal>

@code {
    bool IsOpen = false;

    [Parameter]
    public RenderFragment Title { get; set; }

    [Parameter]
    public RenderFragment Body { get; set; }

    [Parameter]
    public RenderFragment Footer { get; set; }

    [Parameter]
    public ModalSizeEnum ModalSize { get; set; } = ModalSizeEnum.Medium;

    private string _ModalSize
    {
        get
        {
            switch (ModalSize)
            {
                case ModalSizeEnum.XLarge:
                    return "xl";
                case ModalSizeEnum.Large:
                    return "lg";
                case ModalSizeEnum.Medium:
                default:
                    return "md";
                case ModalSizeEnum.Small:
                    return "sm";
            }
        }
    }


    public async Task Open()
    {
        IsOpen = true;
    }

    public async Task Close()
    {
        IsOpen = false;
    }
}