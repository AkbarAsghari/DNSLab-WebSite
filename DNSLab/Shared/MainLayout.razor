@inherits LayoutComponentBase
@inject IStringLocalizer<Resource> localizer
@inject IHttpContextAccessor httpContextAccessor
@inject NavigationManager navigationManager

<PageTitle>DNSLab</PageTitle>
<MudRTLProvider RightToLeft=true>
    <MudThemeProvider Theme="MyCustomTheme"  @ref="@_mudThemeProvider" @bind-IsDarkMode="@_isDarkMode" />
    <MudDialogProvider />
    <MudSnackbarProvider />

    <CascadingAuthenticationState>
        <CascadingValue Value="@IPDTO">
            <MudLayout>
                <MudAppBar Elevation="1">
                    <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start"
                        OnClick="@((e) => DrawerToggle())" />
                    <MudSpacer />
                    <MudIconButton Href="https://github.com/AkbarAsghari/DNSLab-WebSite" Icon="@Icons.Custom.Brands.GitHub" Title="GitHub" Color="Color.Inherit"/>
                </MudAppBar>
                <MudDrawer @bind-Open="@_drawerOpen">
                    <NavMenu />
                </MudDrawer>
                <MudMainContent>
                    <MudContainer MaxWidth="MaxWidth.Large" Class="mt-4 mb-4">
                        <AuthorizeView>
                            <Authorized>
                                @Body
                            </Authorized>
                            <NotAuthorized>
                                @Body
                            </NotAuthorized>
                        </AuthorizeView>
                    </MudContainer>
                </MudMainContent>
            </MudLayout>
        </CascadingValue>
    </CascadingAuthenticationState>
</MudRTLProvider>

@code {

    bool _isDarkMode = false;
    private MudThemeProvider _mudThemeProvider;

     protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            _isDarkMode = await _mudThemeProvider.GetSystemPreference();
            await _mudThemeProvider.WatchSystemPreference(OnSystemPreferenceChanged);
            StateHasChanged();
        }
    }
    
    private async Task OnSystemPreferenceChanged(bool newValue)
    {
        _isDarkMode = newValue;
        StateHasChanged();
    }

    bool _drawerOpen = true;

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    MudTheme MyCustomTheme = new MudTheme()
        {
            Typography = new Typography()
            {
                Default = new Default()
                {
                    FontFamily = new[] { "vazir-light" }
                },
                H1 = new H1
                {
                    FontFamily = new[] { "vazir-bold" },
                    FontSize = "xxx-large"
                },
                H2 = new H2
                {
                    FontFamily = new[] { "vazir-bold" },
                    FontSize = "xx-large"
                },
                H3 = new H3
                {
                    FontFamily = new[] { "vazir-bold" },
                    FontSize = "x-large"
                },
                H4 = new H4
                {
                    FontFamily = new[] { "vazir-bold" },
                    FontSize = "large"
                },
                Subtitle1 = new Subtitle1
                {
                    FontSize = "large",
                    FontWeight = 900
                }
            }
        };
}
