<button type="@(EditContext == null ? "button" : "submit")" class="btn btn@(IsOutLine ? "-outline" : String.Empty)-@(Color.ToString().ToLower())" @onclick="ButtonClickedEvent">
    @if (IsBussy)
    {
        <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
        <text>@IsBussyCaption...</text>
    }
    else
    {
        <text>@Caption</text>
    }
</button>

@code {
    [Parameter] public ColorEnum Color { get; set; }
    [Parameter] public string Caption { get; set; }
    [Parameter] public bool IsOutLine { get; set; }
    [Parameter] public bool IsBussy { get; set; }
    [Parameter] public string IsBussyCaption { get; set; }
    [Parameter] public EventCallback OnClick { get; set; }
    [Parameter] public EditContext EditContext { get; set; }

    private async Task ButtonClickedEvent()
    {
        IsBussy = true;

        if (EditContext == null)
            await OnClick.InvokeAsync();
        else
            if (EditContext.Validate())
            await OnClick.InvokeAsync();

        IsBussy = false;
    }
}
