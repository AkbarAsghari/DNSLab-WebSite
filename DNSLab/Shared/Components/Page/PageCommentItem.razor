@inject ICommentRepository _CommentRepository
@inject IStringLocalizer<Resource> localizer
@inject NavigationManager _NavigationManager

@if (!IsDeleted)
{
    <div class="row">
        @if (PageComment.ReplyTo != null)
        {
            <div class="col-1" />
        }
        <div class="col-auto">
            <UserProfileImage UserId="@PageComment.UserId.ToString()" Size="50"></UserProfileImage>
        </div>
        <div class="col-auto">
            <BitLabel>@PageComment.FullName</BitLabel>
            <BitLabel>@PageComment.CreateDate.ToLocalizerString()</BitLabel>
        </div>

        <div class="col-auto">
            <BitActionButton IconName="BitIconName.Reply" OnClick="ReplyButtonClick">
                پاسخ
            </BitActionButton>
            @if (PageComment.UserId == AuthUserId)
            {
                <BitActionButton IconName="BitIconName.Edit" OnClick="()=> IsEditing = true">
                    ویرایش
                </BitActionButton>
                <BitActionButton IconName="BitIconName.Delete" Class="bit-icon-Delete-red" OnClick="DeleteComment">
                    حذف
                </BitActionButton>
            }
        </div>
    </div>
    <div class="row">
        @if (PageComment.ReplyTo != null)
        {
            <div class="col-1" />
        }
        <div class="@(PageComment.ReplyTo != null ? "col-11" : "col-12")">
            @if (IsEditing)
            {
                <BitTextField IsMultiline=true
                      Rows="3"
                      @bind-Value=@PageComment.Text></BitTextField>
                <BaseButtonComponent Caption="ذخیره"
                             Icon="BitIconName.Save"
                             OnClick="SubmitEditComment">
                </BaseButtonComponent>
                <BaseButtonComponent Caption="انصراف"
                             Icon="BitIconName.Cancel"
                             OnClick="()=> IsEditing = false">
                </BaseButtonComponent>
            }
            else
            {
                <BitLabel>@PageComment.Text</BitLabel>
            }
        </div>
    </div>
}

<Modal @ref=DeleteModal>
    <Title><BitLabel>آیا از حذف دیدگاه مطمئن میباشید؟</BitLabel></Title>
    <Body>
        <BitLabel>متن دیدگاه : </BitLabel>
        <BitLabel>@PageComment.Text</BitLabel>
    </Body>
    <Footer>
        <BaseButtonComponent Caption=@localizer["Cancel"]
                             IsBussyCaption=@localizer["Progressing"]
                             Icon=BitIconName.Cancel
                             OnClick=DeleteModal.Close></BaseButtonComponent>
        <BaseButtonComponent Caption=@localizer["Delete"]
                             IsBussyCaption=@localizer["Progressing"]
                             Icon=BitIconName.Delete
                             OnClick=SubmitDeleteComment></BaseButtonComponent>
    </Footer>
</Modal>

@code {
    [Parameter] public Guid AuthUserId { get; set; } = Guid.Empty;
    [Parameter] public PageCommentDTO PageComment { get; set; }
    [Parameter] public EventCallback ReplyButtonClick { get; set; }

    bool IsEditing = false;
    bool IsDeleted = false;

    Modal DeleteModal;

    CreatePageCommentDTO ReplyPageComment = new CreatePageCommentDTO { Text = String.Empty };

    async Task DeleteComment() => await DeleteModal.Open();

    async Task SubmitEditComment()
    {
        if (await _CommentRepository.UpdatePageComment(PageComment))
            IsEditing = false;
    }

    async Task SubmitDeleteComment()
    {
        if (await _CommentRepository.DeletePageComment(PageComment.Id))
        {
            await DeleteModal.Close();
            IsDeleted = true;
        }
    }
}
